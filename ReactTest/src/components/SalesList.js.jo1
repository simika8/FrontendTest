import { QueryClient, QueryClientProvider, useQuery } from 'react-query'

const queryClient = new QueryClient()

export default function SalesList(props) {
    return (
        <QueryClientProvider client={queryClient}>
            <Example prodid = {props.prodid}/>
        </QueryClientProvider>
    )
}

function Example(props) {
    console.log("prodid: " +props.prodid);
    /*const { isLoading, error, data } = useQuery('repoData', () =>
        fetch('https://api.github.com/repos/tannerlinsley/react-query').then(response => response.json())
        .then(response => {
            console.log(" response");
            return response;
        })
    );*/

    const { isLoading, error, data } = useQuery('Sales'+props.prodid, () =>
        fetch("https://localhost:44339/api/Sales?productid="+props.prodid+"&minTimeMs=1000&maxTimeMs=1000").then(response => response.json())
    );
    if (!props.prodid) return 'Empty...';

    if (isLoading) return 'Loading...';

    if (error) return 'An error has occurred: ' + error.message;
    console.log(" response " /*+JSON.stringify(data)*/);
    //return JSON.stringify(data);

    return (
        <div>
            <table className="table-striped">
                <thead>
                    <tr>
                        <th>H√≥nap</th>
                        <th>Fogy√°s</th>
                    </tr>
                </thead>
                <tbody>
                    {
                        data.map(function (currentSale, i) {
                            return (
                                <tr key = {i}>
                                    <td>{currentSale.month}</td>
                                    <td>{currentSale.quantity}</td>
                                </tr>
                            );
                        })
                    }
                    <tr>
                        <td>{props.prodid}</td>
                        <td>asdf</td>
                    </tr>
                </tbody>
            </table>
        </div>
    )

    //return JSON.stringify(data);
    /*return (
        <div>
            <h1>{data.name}</h1>
            <p>{data}</p>
            <strong>üëÄ {data.subscribers_count}</strong>{' '}
            <strong>‚ú® {data.stargazers_count}</strong>{' '}
            <strong>üç¥ {data.forks_count}</strong>
        </div>
    )*/
}
